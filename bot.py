from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters
import requests
from datetime import datetime

API_URL = "http://localhost:8001"  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ —ç—Ç–æ–º –ø–æ—Ä—Ç—É
TOKEN = "7879703019:AAHgq3YSlU4wug2L0vC5aSf57XX5MvFfO_U"

async def start(update: Update, context):
    await update.message.reply_text(
        "üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π —Ç—Ä–µ–∫–µ—Ä\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/add <—Å—É–º–º–∞> <–∫–∞—Ç–µ–≥–æ—Ä–∏—è> [–æ–ø–∏—Å–∞–Ω–∏–µ] - –¥–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞—Ç—É\n"
        "/list - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ç—Ä–∞—Ç—ã\n"
        "/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)"
    )

async def add_transaction(update: Update, context):
    try:
        _, amount, category, *description = update.message.text.split()
        data = {
            "amount": float(amount),
            "category": category,
            "description": " ".join(description) if description else None
        }
        response = requests.post(f"{API_URL}/transactions/", json=data)
        await update.message.reply_text("‚úÖ –¢—Ä–∞—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!")
    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {e}")

async def list_transactions(update: Update, context):
    try:
        response = requests.get(f"{API_URL}/transactions/")
        transactions = response.json()
        
        if not transactions:
            await update.message.reply_text("üì≠ –°–ø–∏—Å–æ–∫ —Ç—Ä–∞—Ç –ø—É—Å—Ç")
            return
            
        message = "üìã –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞—Ç:\n\n"
        for idx, tr in enumerate(transactions, 1):
            date = datetime.strptime(tr['date'], "%Y-%m-%d").strftime("%d.%m.%Y")
            message += (
                f"{idx}. {tr['amount']} ‚ÇΩ - {tr['category']}\n"
                f"   –û–ø–∏—Å–∞–Ω–∏–µ: {tr.get('description', '–Ω–µ—Ç')}\n"
                f"   –î–∞—Ç–∞: {date}\n\n"
            )
        
        await update.message.reply_text(message)
    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç—Ä–∞—Ç: {e}")

def run_bot():
    app = Application.builder().token(TOKEN).build()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("add", add_transaction))
    app.add_handler(CommandHandler("list", list_transactions))
    
    app.run_polling()

if __name__ == "__main__":
    run_bot()